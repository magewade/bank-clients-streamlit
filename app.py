import streamlit as st
import pandas as pd
from PIL import Image
import pickle
import numpy as np
from model import (
    open_data,
    preprocess_data,
    predict_on_input,
    load_threshold,
    load_model,
)

from scipy.special import expit
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.metrics import confusion_matrix
from matplotlib.colors import LinearSegmentedColormap
from sklearn.metrics import (
    confusion_matrix,
    accuracy_score,
    recall_score,
    fbeta_score,
    roc_auc_score,
)


st.set_page_config(layout="wide")

colors = ["#ADCACB", "#FEE3A2"]
sns.set_palette(colors)

cmap = LinearSegmentedColormap.from_list("custom_cmap", colors)


# Preload content
def preload_content():
    """Preload content used in the web app."""

    # Load images
    images = {
        "bank": Image.open("data/bank.jpeg"),
        "auto": Image.open("data/auto.png"),
        "age": Image.open("data/age.png"),
        "children": Image.open("data/children.png"),
        "confusion_matrix": Image.open("data/confusion_matrix.png"),
        "credit": Image.open("data/credit.png"),
        "feature_importance": Image.open("data/feature_importance.png"),
        "heatmap": Image.open("data/heatmap.png"),
        "gender": Image.open("data/gender.png"),
        "martial_status": Image.open("data/martial_status.png"),
        "phik": Image.open("data/phik.png"),
        "target": Image.open("data/target.png"),
        "total_loans": Image.open("data/total_loans.png"),
        "work_fl": Image.open("data/work_fl.png"),
        "pens_fl": Image.open("data/pens_fl.png"),
        'dependant': Image.open('data/dependant.png'),
        'cross': Image.open('data/cross.png')
    }
    return images

# Streamlit UI
st.title("–ê–Ω–∞–ª–∏–∑ —Å–∫–ª–æ–Ω–Ω–æ—Å—Ç–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤ –±–∞–Ω–∫–∞ –∫ –æ—Ç–∫–ª–∏–∫—É –Ω–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è")
st.subheader('–ò—Å—Å–ª–µ–¥—É–µ–º –¥–∞–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç–æ–≤, –ø—Ä–µ–¥—Å–∫–∞–∑—ã–≤–∞–µ–º –æ—Ç–∫–ª–∏–∫, –æ—Ü–µ–Ω–∏–≤–∞–µ–º –≤–∞–∂–Ω–æ—Å—Ç—å —Ñ–∞–∫—Ç–æ—Ä–æ–≤')

# Display bank image as cover image
images = preload_content()  # Grab the images dictionary
st.image(images["bank"], use_column_width=False)

tab1, tab2, tab3 = st.tabs(["üìä –ê–Ω–∞–ª–∏–∑", "üìà –û –º–æ–¥–µ–ª–∏", "üîç –ü—Ä–µ–¥—Å–∫–∞–∑–∞—Ç—å"])
import streamlit as st

with tab1:
    st.header("–î–∞–Ω–Ω—ã–µ")
    df = open_data()
    st.dataframe(df.head(7))

    col1, col2 = st.columns(2)

    with col1:
        st.text("‚Ä¢ AGE ‚Äî –≤–æ–∑—Ä–∞—Å—Ç –∫–ª–∏–µ–Ω—Ç–∞")
        st.text("‚Ä¢ CHILD_TOTAL ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–µ—Ç–µ–π –∫–ª–∏–µ–Ω—Ç–∞")
        st.text("‚Ä¢ DEPENDANTS ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–∂–¥–∏–≤–µ–Ω—Ü–µ–≤ –∫–ª–∏–µ–Ω—Ç–∞")
        st.text("‚Ä¢ OWN AUTO ‚Äî –∞–≤—Ç–æ–º–æ–±–∏–ª–∏ –≤ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏")
        st.text("‚Ä¢ PERSONAL_INCOME ‚Äî –ª–∏—á–Ω—ã–π –¥–æ—Ö–æ–¥ –∫–ª–∏–µ–Ω—Ç–∞ (–≤ —Ä—É–±–ª—è—Ö)")
        st.text("‚Ä¢ TOTAL_LOANS ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫—Ä–µ–¥–∏—Ç–æ–≤ –∫–ª–∏–µ–Ω—Ç–∞")
        st.text("‚Ä¢ CLOSED_LOANS ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–≥–∞—à–µ–Ω–Ω—ã—Ö –∫—Ä–µ–¥–∏—Ç–æ–≤ –∫–ª–∏–µ–Ω—Ç–∞")

    with col2:
        st.text("‚Ä¢ WORK_YEARS ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞–±–æ—á–∏—Ö –ª–µ—Ç –∫–ª–∏–µ–Ω—Ç–∞")
        st.text("‚Ä¢ GENDER ‚Äî –ø–æ–ª –∫–ª–∏–µ–Ω—Ç–∞")
        st.text("‚Ä¢ MARITAL_STATUS ‚Äî —Å–µ–º–µ–π–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ")
        st.text("‚Ä¢ SOCSTATUS_WORK_FL ‚Äî —Ä–∞–±–æ—Ç–∞–µ—Ç (1) –∏–ª–∏ –Ω–µ—Ç (0)")
        st.text("‚Ä¢ SOCSTATUS_PENS_FL ‚Äî –ø–µ–Ω—Å–∏–æ–Ω–µ—Ä (1) –∏–ª–∏ –Ω–µ—Ç (0)")
        st.text("‚Ä¢ FL_PRESENCE_FL ‚Äî –Ω–∞–ª–∏—á–∏–µ –∫–≤–∞—Ä—Ç–∏—Ä—ã (1 ‚Äî –¥–∞, 0 ‚Äî –Ω–µ—Ç)")
        st.text("‚Ä¢ TARGET ‚Äî –æ—Ç–∫–ª–∏–∫ –Ω–∞ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—É—é –∫–∞–º–ø–∞–Ω–∏—é (1 ‚Äî –¥–∞, 0 ‚Äî –Ω–µ—Ç)")
        
    st.header("–ê–Ω–∞–ª–∏–∑")

    # –°–æ–∑–¥–∞—ë–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Å–µ—Ç–∫–∏
    grid = []
    images_with_captions = [
        (
            images["target"],
            "–¶–µ–ª–µ–≤–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è: –æ—Ç–∫–ª–∏–∫ –Ω–∞ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—É—é –∫–∞–º–ø–∞–Ω–∏—é (1 ‚Äî –æ—Ç–∫–ª–∏–∫ –±—ã–ª –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω, 0 ‚Äî –æ—Ç–∫–ª–∏–∫–∞ –Ω–µ –±—ã–ª–æ). –¢–∞—Ä–≥–µ—Ç –Ω–µ—Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω, —á—Ç–æ –ª–æ–≥–∏—á–Ω–æ, —Ç–∞–∫ –∫–∞–∫ –æ–±—ã—á–Ω–æ –ª—é–¥–∏ –æ—Ç–∫–∞–∑—ã–≤–∞—é—Ç—Å—è –æ—Ç –±–∞–Ω–∫–æ–≤—Å–∫–∏—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π",
        ),
        (images["gender"], "–ü–æ–ª –∫–ª–∏–µ–Ω—Ç–∞ (1 ‚Äî –º—É–∂—á–∏–Ω–∞, 0 ‚Äî –∂–µ–Ω—â–∏–Ω–∞). –í –¥–∞–Ω–Ω—ã—Ö –±–∞–Ω–∫–∞ –±–æ–ª—å—à–µ –∫–ª–∏–µ–Ω—Ç–æ–≤-–º—É–∂—á–∏–Ω"),
        (images["age"], "–í–æ–∑—Ä–∞—Å—Ç –∫–ª–∏–µ–Ω—Ç–∞. –ú–æ–∂–Ω–æ –æ—Ç–º–µ—Ç–∏—Ç—å, —á—Ç–æ –∫–ª–∏–µ–Ω—Ç—ã, —Å–æ–≥–ª–∞—à–∞—é—â–∏–µ—Å—è –Ω–∞ –±–∞–Ω–∫–æ–≤—Å–∫–∏—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è, –≤ —Å—Ä–µ–¥–Ω–µ–º –º–æ–ª–æ–∂–µ"),
        (images["martial_status"], "–°–µ–º–µ–π–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ. –ë–æ–ª—å—à–µ –∫–ª–∏–µ–Ω—Ç–æ–≤ –≤ —Å–æ—Å—Ç–æ—è—Ç –≤ –±—Ä–∞–∫–µ"),
        (images["work_fl"], "–†–∞–±–æ—Ç–∞–µ—Ç/–Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç. –ë–æ–ª—å—à–∞—è —á–∞—Å—Ç—å –∫–ª–∏–µ–Ω—Ç–æ–≤ –±–∞–Ω–∫–∞ —Ä–∞–±–æ—Ç–∞—é—Ç, –∞ –∫–ª–∏–µ–Ω—Ç—ã –±–µ–∑ —Ä–∞–±–æ—Ç—ã —Ä–µ–¥–∫–æ —Å–æ–≥–ª–∞—à–∞—é—Ç—Å—è –Ω–∞ –±–∞–Ω–∫–æ–≤—Å–∫–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è"),
        (images["pens_fl"], "–ü–µ–Ω—Å–∏–æ–Ω–µ—Ä/–Ω–µ –ø–µ–Ω—Å–∏–æ–Ω–µ—Ä. –ë–æ–ª—å—à–∞—è —á–∞—Å—Ç—å –∫–ª–∏–µ–Ω—Ç–æ–≤ –±–∞–Ω–∫–∞ –Ω–µ —è–≤–ª—è—é—Ç—Å—è –ø–µ–Ω—Å–∏–æ–Ω–µ—Ä–∞–º–∏, –∞ –∫–ª–∏–µ–Ω—Ç—ã-–ø–µ–Ω—Å–∏–æ–Ω–µ—Ä—ã —Ä–µ–¥–∫–æ —Å–æ–≥–ª–∞—à–∞—é—Ç—Å—è –Ω–∞ –±–∞–Ω–∫–æ–≤—Å–∫–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è"),
        (images["children"], "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–µ—Ç–µ–π. –í –æ—Å–Ω–æ–≤–Ω–æ–º, –∫–ª–∏–µ–Ω—Ç—ã –∏–º–µ—é—Ç –¥–æ 3 –¥–µ—Ç–µ–π"),
        (images["dependant"], "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–∂–¥–∏–≤–µ–Ω—Ü–µ–≤. –í –æ—Å–Ω–æ–≤–Ω–æ–º, –∫–ª–∏–µ–Ω—Ç—ã –∏–º–µ—é—Ç –¥–æ 3 –∏–∂–¥–∏–≤–µ–Ω—Ü–µ–≤"),
        (images["auto"], "–ê–≤—Ç–æ–º–æ–±–∏–ª–∏ –≤ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏. –ë–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ –∫–ª–∏–µ–Ω—Ç–æ–≤ –Ω–µ –∏–º–µ—é—Ç –∞–≤—Ç–æ –≤ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏"),
        (images["total_loans"], "–ö—Ä–µ–¥–∏—Ç—ã –∫–ª–∏–µ–Ω—Ç–∞. –ë–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ –∫–ª–∏–µ–Ω—Ç–æ–≤ –∏–º–µ—é—Ç –¥–æ 3 –∫—Ä–µ–¥–∏—Ç–æ–≤"),
    ]

    # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –≤ —Å—Ç—Ä–æ–∫–∏ –ø–æ 2 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    for i in range(0, len(images_with_captions), 2):
        row = st.columns(2)  # –°–æ–∑–¥–∞—ë–º —Å—Ç—Ä–æ–∫—É —Å –¥–≤—É–º—è –∫–æ–ª–æ–Ω–∫–∞–º–∏

        # –î–æ–±–∞–≤–ª—è–µ–º –¥–≤–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —Å—Ç—Ä–æ–∫—É
        for j in range(2):
            if i + j < len(images_with_captions):  # –ß—Ç–æ–±—ã –Ω–µ –≤—ã–π—Ç–∏ –∑–∞ –ø—Ä–µ–¥–µ–ª—ã —Å–ø–∏—Å–∫–∞
                with row[j]:  # –ë–µ—Ä—ë–º –Ω—É–∂–Ω—É—é –∫–æ–ª–æ–Ω–∫—É
                    st.image(
                        images_with_captions[i + j][0],
                        caption=images_with_captions[i + j][1],
                        width=650,
                    )

    # –¶–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–æ–ø. –≥—Ä–∞—Ñ–∏–∫–∏
    st.markdown('<div style="text-align: center;">', unsafe_allow_html=True)
    st.image(
        images["cross"],
        caption="–ì—Ä–∞—Ñ–∏–∫ –ø–æ–ø–∞—Ä–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π —Å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º —Ç–∞—Ä–≥–µ—Ç–∞. 1 ‚Äî –æ—Ç–∫–ª–∏–∫ –±—ã–ª –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω, 0 ‚Äî –æ—Ç–∫–ª–∏–∫–∞ –Ω–µ –±—ã–ª–æ",
        width=1300,
    )
    st.image(images["phik"], caption="Heatmap –¥–ª—è phik –∫–æ—Ä—Ä–µ–ª—è—Ü–∏—è –≤—Å–µ—Ö –ø—Ä–∏–∑–Ω–∞–∫–æ–≤, –ú–æ–∂–Ω–æ –∑–∞–º–µ—Ç–∏—Ç—å –Ω–∞–∏–≤—ã—Å—à—É—é –∫–æ—Ä—Ä–µ–ª—è—Ü–∏—é —Ç–∞—Ä–≥–µ—Ç–∞ —Å –≤–æ–∑—Ä–∞—Å—Ç–æ–º –∫–ª–∏–µ–Ω—Ç–æ–≤, —Ä–∞–±–æ—á–∏–º —Å—Ç–∞—Ç—É—Å–æ–º, —Å—Ç–∞—Ç—É—Å–æ–º –ø–µ–Ω—Å–∏–æ–Ω–µ—Ä–∞, –∞ —Ç–∞–∫–∂–µ —Å –ª–∏—á–Ω—ã–º –¥–æ—Ö–æ–¥–æ–º –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º —Ä–∞–±–æ—á–∏—Ö –ª–µ—Ç", width=1300)

with tab2:
    st.header("–ú–æ–¥–µ–ª—å")
    st.subheader("–û–ø–∏—Å–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏")
    st.write(
        """
    –î–ª—è –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è –æ—Ç–∫–ª–∏–∫–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è **LogisticRegression** ‚Äì –ª–∏–Ω–µ–π–Ω–∞—è –º–æ–¥–µ–ª—å –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏. –õ–æ–≥–∏—Å—Ç–∏—á–µ—Å–∫–∞—è —Ä–µ–≥—Ä–µ—Å—Å–∏—è –ø—Ä–∏–º–µ–Ω—è–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é –ª–æ–≥–∏—Å—Ç–∏—á–µ—Å–∫–æ–π —Ä–µ–≥—Ä–µ—Å—Å–∏–∏ –¥–ª—è –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏—è –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏, —á—Ç–æ –∫–ª–∏–µ–Ω—Ç —Å–æ–≥–ª–∞—Å–∏—Ç—Å—è –Ω–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ. –≠—Ç–æ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è –º–æ–¥–µ–ª—å –¥–ª—è –∑–∞–¥–∞—á –±–∏–Ω–∞—Ä–Ω–æ–π –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏.

    –ü–µ—Ä–µ–¥ –æ–±—É—á–µ–Ω–∏–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ö–æ–¥—è—Ç –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É —Å –ø–æ–º–æ—â—å—é **ColumnTransformer**:
    - –ß–∏—Å–ª–æ–≤—ã–µ –ø—Ä–∏–∑–Ω–∞–∫–∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∏—Ä—É—é—Ç—Å—è —Å –ø–æ–º–æ—â—å—é **StandardScaler**, —á—Ç–æ –ø—Ä–∏–≤–æ–¥–∏—Ç –∏—Ö –∫ –Ω–æ—Ä–º–∞–ª—å–Ω–æ–º—É —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—é —Å –Ω—É–ª–µ–≤—ã–º —Å—Ä–µ–¥–Ω–∏–º –∏ –µ–¥–∏–Ω–∏—á–Ω–æ–π –¥–∏—Å–ø–µ—Ä—Å–∏–µ–π. –≠—Ç–æ –ø–æ–º–æ–≥–∞–µ—Ç LogisticRegression –ª—É—á—à–µ —Ä–∞–±–æ—Ç–∞—Ç—å, —Ç–∞–∫ –∫–∞–∫ –æ–Ω–∞ —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞ –∫ –º–∞—Å—à—Ç–∞–±—É –¥–∞–Ω–Ω—ã—Ö.
    - –ö–∞—Ç–µ–≥–æ—Ä–∏–∞–ª—å–Ω—ã–µ –ø—Ä–∏–∑–Ω–∞–∫–∏ –∫–æ–¥–∏—Ä—É—é—Ç—Å—è –º–µ—Ç–æ–¥–æ–º **One-Hot Encoding**.

    """
    )

    st.subheader("–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø–æ—Ä–æ–≥–∞")
    st.write(
        """
    –¶–µ–ª—å—é –º–æ–¥–µ–ª–∏ —è–≤–ª—è–µ—Ç—Å—è **–º–∞–∫—Å–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π –∫–ª–∞—Å—Å–∞ 1** ‚Äì –∫–ª–∏–µ–Ω—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ —Å –Ω–∞–∏–±–æ–ª—å—à–µ–π –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é —Å–æ–≥–ª–∞—Å—è—Ç—Å—è –Ω–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ. –≠—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç **–æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã–µ –∑–∞—Ç—Ä–∞—Ç—ã**:
    - **–§–æ–∫—É—Å–∏—Ä–æ–≤–∞—Ç—å—Å—è –Ω–∞ –∫–ª–∏–µ–Ω—Ç–∞—Ö, –∫–æ—Ç–æ—Ä—ã–µ —Å –≤—ã—Å–æ–∫–æ–π –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é –¥–∞–¥—É—Ç –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π –æ—Ç–∫–ª–∏–∫**.
    - **–ú–∏–Ω–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø–æ—Ç–µ—Ä–∏ –≤—Ä–µ–º–µ–Ω–∏ –∏ —Ä–µ—Å—É—Ä—Å–æ–≤ –Ω–∞ –∑–∞–≤–µ–¥–æ–º–æ –æ—Ç–∫–∞–∑–∞–≤—à–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤**.
    
    –î–ª—è –≤—ã–±–æ—Ä–∞ –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–≥–æ –ø–æ—Ä–æ–≥–∞ –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏ (`threshold`) –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∞—Å—å **F2-–º–µ—Ä–∞** ‚Äì –º–µ—Ç—Ä–∏–∫–∞, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–¥–∞—ë—Ç –±–æ–ª—å—à–∏–π –≤–µ—Å **–ø–æ–ª–Ω–æ—Ç–µ (recall)**, —á—Ç–æ –æ—Å–æ–±–µ–Ω–Ω–æ –≤–∞–∂–Ω–æ –¥–ª—è –≤—ã—è–≤–ª–µ–Ω–∏—è –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤. –¢–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, –º–æ–¥–µ–ª—å —Å—Ç–∞—Ä–∞–µ—Ç—Å—è –º–∏–Ω–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–ø—É—Å–∫ –∫–ª–∏–µ–Ω—Ç–æ–≤, –≥–æ—Ç–æ–≤—ã—Ö —Å–æ–≥–ª–∞—Å–∏—Ç—å—Å—è –Ω–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ.
    """
    )

    st.subheader("–í–ª–∏—è–Ω–∏–µ threshold –∏ Confusion Matrix")
    st.write(
    """
    Confusion Matrix –ø–æ–º–æ–≥–∞–µ—Ç –ø–æ–Ω—è—Ç—å, –Ω–∞—Å–∫–æ–ª—å–∫–æ —Ç–æ—á–Ω–æ –º–æ–¥–µ–ª—å –∫–ª–∞—Å—Å–∏—Ñ–∏—Ü–∏—Ä—É–µ—Ç –æ—Ç–∫–ª–∏–∫–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤, —Ä–∞–∑–¥–µ–ª—è—è –∏—Ö –Ω–∞ —á–µ—Ç—ã—Ä–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:

    - **True Positive (TP)**: –ö–ª–∏–µ–Ω—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Å–æ–≥–ª–∞—Å–∏–ª–∏—Å—å –Ω–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ, –∏ –º–æ–¥–µ–ª—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–ª–∞ —ç—Ç–æ—Ç –æ—Ç–∫–ª–∏–∫.
    - **True Negative (TN)**: –ö–ª–∏–µ–Ω—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ —Å–æ–≥–ª–∞—Å–∏–ª–∏—Å—å –Ω–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ, –∏ –º–æ–¥–µ–ª—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–ª–∞ –æ—Ç–∫–∞–∑.
    - **False Positive (FP)**: –ö–ª–∏–µ–Ω—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ —Å–æ–≥–ª–∞—Å–∏–ª–∏—Å—å –Ω–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ, –Ω–æ –º–æ–¥–µ–ª—å –æ—à–∏–±–æ—á–Ω–æ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–ª–∞ –æ—Ç–∫–ª–∏–∫.
    - **False Negative (FN)**: –ö–ª–∏–µ–Ω—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ —Å–æ–≥–ª–∞—Å–∏–ª–∏—Å—å –Ω–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ, –Ω–æ –º–æ–¥–µ–ª—å –æ—à–∏–±–æ—á–Ω–æ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–ª–∞ –æ—Ç–∫–∞–∑.

    –° –ø–æ–º–æ—â—å—é **–ø–æ—Ä–æ–≥–∞ (threshold)** –º–æ–∂–Ω–æ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞—Ç—å –±–∞–ª–∞–Ω—Å –º–µ–∂–¥—É —ç—Ç–∏–º–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏. –ß–µ–º –≤—ã—à–µ –ø–æ—Ä–æ–≥, —Ç–µ–º –º–µ–Ω—å—à–µ –∫–ª–∏–µ–Ω—Ç–æ–≤ –±—É–¥–µ—Ç –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–æ –∫–∞–∫ –æ—Ç–∫–ª–∏–∫–Ω—É–≤—à–∏–µ—Å—è (–ø–æ—Ç–æ–º—É —á—Ç–æ –º–æ–¥–µ–ª—å –±—É–¥–µ—Ç –±–æ–ª–µ–µ —Å—Ç—Ä–æ–≥–æ–π –≤ –ø—Ä–∏–Ω—è—Ç–∏–∏ —Ä–µ—à–µ–Ω–∏—è). –≠—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø–æ–ª–µ–∑–Ω–æ, –µ—Å–ª–∏ —Ö–æ—á–µ—Ç—Å—è –º–∏–Ω–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª–æ–∂–Ω—ã—Ö –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã—Ö —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏–π.

    ### –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ—Ä–æ–≥–∞
    –í—ã –º–æ–∂–µ—Ç–µ –∏–∑–º–µ–Ω—è—Ç—å –ø–æ—Ä–æ–≥ —Å –ø–æ–º–æ—â—å—é –ø–æ–ª–∑—É–Ω–∫–∞, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å, –∫–∞–∫ —ç—Ç–æ –≤–ª–∏—è–µ—Ç –Ω–∞ –∫–æ–Ω—Ñ—å—é–∂–Ω –º–∞—Ç—Ä–∏—Ü—É –∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –º–µ—Ç—Ä–∏–∫–∏. –≠—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –≤—ã–±—Ä–∞—Ç—å –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ—Ä–æ–≥–∞, –∫–æ—Ç–æ—Ä–æ–µ –ª—É—á—à–µ –≤—Å–µ–≥–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –≤–∞—à–µ–π –∑–∞–¥–∞—á–µ.
    """)

    # –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –∏ —Ñ—É–Ω–∫—Ü–∏–∏
    X, y, numerical, categorical, preprocessor = preprocess_data(df)
    model = load_model()
    y_pred_proba = expit(model.decision_function(X))  # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –ª–æ–≥–∏—Ç—ã –≤ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏

    # –î–æ–±–∞–≤–ª—è–µ–º —Å–ª–∞–π–¥–µ—Ä –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø–æ—Ä–æ–≥–∞
    threshold = st.slider("–í—ã–±–µ—Ä–∏ –ø–æ—Ä–æ–≥ –¥–ª—è –º–µ—Ç–æ–∫", 0.0, 1.0, 0.38, 0.01)
    y_pred_thresholded = (y_pred_proba >= threshold).astype(int)

    # –°—Ç—Ä–æ–∏–º Confusion Matrix
    cm = confusion_matrix(y, y_pred_thresholded)
    fig, ax = plt.subplots(figsize=(4, 3))
    sns.heatmap(
        cm,
        annot=True,
        fmt="d",
        cmap=cmap, 
        xticklabels=["0", "1"],
        yticklabels=["0", "1"],
        ax=ax,
    )

    # –£–º–µ–Ω—å—à–∞–µ–º —à—Ä–∏—Ñ—Ç
    ax.set_xlabel("–ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–Ω—ã–π –∫–ª–∞—Å—Å", fontsize=8)
    ax.set_ylabel("–ò—Å—Ç–∏–Ω–Ω—ã–π –∫–ª–∞—Å—Å", fontsize=8)
    ax.set_title("Confusion Matrix", fontsize=10)

    # –ù–∞—Å—Ç—Ä–æ–∏–º —Ä–∞–∑–º–µ—Ä —à—Ä–∏—Ñ—Ç–∞ –¥–ª—è –∞–Ω–Ω–æ—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —á–∏—Å–µ–ª
    for label in ax.get_xticklabels() + ax.get_yticklabels():
        label.set_fontsize(7)


    # –†–∞–∑–º–µ—â–µ–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–∞ –∏ –º–µ—Ç—Ä–∏–∫ —Ä—è–¥–æ–º
    col1, col2 = st.columns([2, 1])  # 2: –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–∞, 1: –¥–ª—è –º–µ—Ç—Ä–∏–∫
    with col1:
        st.pyplot(fig, use_container_width=False)  # –ì—Ä–∞—Ñ–∏–∫ Confusion Matrix

    with col2:
        # –í—ã—á–∏—Å–ª–µ–Ω–∏–µ –º–µ—Ç—Ä–∏–∫
        accuracy = accuracy_score(y, y_pred_thresholded)
        recall = recall_score(y, y_pred_thresholded)
        f2 = fbeta_score(y, y_pred_thresholded, beta=2)
        roc_auc = roc_auc_score(y, y_pred_proba)

        # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –º–µ—Ç—Ä–∏–∫ –≤ –≤–∏–¥–µ —Ç–∞–±–ª–∏—Ü—ã
        st.subheader("–ú–µ—Ç—Ä–∏–∫–∏ –º–æ–¥–µ–ª–∏")
        st.write(f"**Threshold:** {threshold:.2f} - –ø–æ—Ä–æ–≥")
        st.write(f"**Accuracy:** {accuracy:.2f} ‚Äì –¥–æ–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π")
        st.write(
            f"**Recall:** {recall:.2f} ‚Äì –Ω–∞—Å–∫–æ–ª—å–∫–æ —Ö–æ—Ä–æ—à–æ –º–æ–¥–µ–ª—å –Ω–∞—Ö–æ–¥–∏—Ç –æ—Ç–∫–ª–∏–∫–Ω—É–≤—à–∏—Ö—Å—è –∫–ª–∏–µ–Ω—Ç–æ–≤"
        )
        st.write(f"**F2-score:** {f2:.2f} ‚Äì –∫–ª—é—á–µ–≤–∞—è –º–µ—Ç—Ä–∏–∫–∞, —É—á–∏—Ç—ã–≤–∞—é—â–∞—è –≤–∞–∂–Ω–æ—Å—Ç—å –ø–æ–ª–Ω–æ—Ç—ã")
        st.write(
            f"**ROC-AUC:** {roc_auc:.2f} ‚Äì –∫–∞—á–µ—Å—Ç–≤–æ –º–æ–¥–µ–ª–∏ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö –ø–æ—Ä–æ–≥–∞—Ö –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏"
        )

    st.subheader("–§–∏–Ω–∞–ª—å–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏ –º–æ–¥–µ–ª–∏")
    st.write(
        """
    –ü–æ—Å–ª–µ –ø–æ–¥–±–æ—Ä–∞ —Ç—Ä–µ—à—Ö–æ–ª–¥–∞ –ø–æ **F2-–º–µ—Ä–µ**, –º–æ–¥–µ–ª—å –¥–æ—Å—Ç–∏–≥–ª–∞ —Å–ª–µ–¥—É—é—â–∏—Ö –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π –Ω–∞ —Ç–µ—Å—Ç–æ–≤–æ–π –≤—ã–±–æ—Ä–∫–µ:
    - **Threshold:** 0.38 - –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–π –ø–æ—Ä–æ–≥
    - **Accuracy:** 0.36 ‚Äì –¥–æ–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π
    - **Recall:** 0.89 ‚Äì –Ω–∞—Å–∫–æ–ª—å–∫–æ —Ö–æ—Ä–æ—à–æ –º–æ–¥–µ–ª—å –Ω–∞—Ö–æ–¥–∏—Ç –æ—Ç–∫–ª–∏–∫–Ω—É–≤—à–∏—Ö—Å—è –∫–ª–∏–µ–Ω—Ç–æ–≤
    - **F2-score:** 0.44 ‚Äì –∫–ª—é—á–µ–≤–∞—è –º–µ—Ç—Ä–∏–∫–∞, —É—á–∏—Ç—ã–≤–∞—é—â–∞—è –≤–∞–∂–Ω–æ—Å—Ç—å –ø–æ–ª–Ω–æ—Ç—ã
    - **ROC-AUC:** 0.66 ‚Äì –∫–∞—á–µ—Å—Ç–≤–æ –º–æ–¥–µ–ª–∏ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö –ø–æ—Ä–æ–≥–∞—Ö –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏
    """
    )

    st.subheader("Feature Importance")

    st.write(
        """
        –í–∞–∂–Ω–æ—Å—Ç—å –ø—Ä–∏–∑–Ω–∞–∫–æ–≤ (Feature Importance) –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç, –∫–∞–∫–∏–µ –ø—Ä–∏–∑–Ω–∞–∫–∏ –Ω–∞–∏–±–æ–ª–µ–µ –≤–ª–∏—è—é—Ç –Ω–∞ –ø—Ä–æ–≥–Ω–æ–∑ –º–æ–¥–µ–ª–∏. –≠—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–Ω—è—Ç—å, –∫–∞–∫–∏–µ —Ñ–∞–∫—Ç–æ—Ä—ã –Ω–∞–∏–±–æ–ª–µ–µ –≤–∞–∂–Ω—ã –¥–ª—è –ø—Ä–∏–Ω—è—Ç–∏—è —Ä–µ—à–µ–Ω–∏—è –º–æ–¥–µ–ª—å—é.

        - **–ü–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã** –æ–∑–Ω–∞—á–∞—é—Ç, —á—Ç–æ —É–≤–µ–ª–∏—á–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø—Ä–∏–∑–Ω–∞–∫–∞ —Å–ø–æ—Å–æ–±—Å—Ç–≤—É–µ—Ç –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—é –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ—Ç–∫–ª–∏–∫–∞.
        - **–û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã** –æ–∑–Ω–∞—á–∞—é—Ç, —á—Ç–æ —É–≤–µ–ª–∏—á–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø—Ä–∏–∑–Ω–∞–∫–∞ —Å–ø–æ—Å–æ–±—Å—Ç–≤—É–µ—Ç –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—é –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–≥–æ –æ—Ç–∫–ª–∏–∫–∞.

        –í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–∞–∂–Ω–æ—Å—Ç—å –ø—Ä–∏–∑–Ω–∞–∫–æ–≤ –≤ —Ç–∞–±–ª–∏—Ü–µ –Ω–∏–∂–µ, –≥–¥–µ –ø—Ä–∏–∑–Ω–∞–∫–∏ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã –ø–æ —Å—Ç–µ–ø–µ–Ω–∏ –≤–ª–∏—è–Ω–∏—è –Ω–∞ –º–æ–¥–µ–ª—å.
        """
    )

    st.image(
        images["feature_importance"],
        caption="–ì—Ä–∞—Ñ–∏–∫ –≤–ª–∏—è–Ω–∏—è –ø—Ä–∏–∑–Ω–∞–∫–æ–≤ –Ω–∞ —Ä–µ—à–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏",
        width=1300,
    )

with tab3:
    # –ó–∞–≥—Ä—É–∑–∏—Ç—å –º–æ–¥–µ–ª—å –∏ –ø–æ—Ä–æ–≥ –∏–∑ —Ñ–∞–π–ª–æ–≤
    model = load_model("data/model.pkl")
    best_threshold = load_threshold("data/best_threshold.txt")

    # –§—É–Ω–∫—Ü–∏—è –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è
    def predict_on_input(df, model, threshold):
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –∏ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–≥–æ –ø–æ—Ä–æ–≥–∞"""
        proba = expit(model.decision_function(df))[0]
        pred = int(proba >= threshold)
        return pred, proba

    # –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ Streamlit
    with st.form(key="prediction_form"):
        st.header("–ü—Ä–µ–¥—Å–∫–∞–∑–∞—Ç—å")
        st.write("### –î–∞—Å—Ç –ª–∏ –∫–ª–∏–µ–Ω—Ç –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç –Ω–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –±–∞–Ω–∫–∞?")

        # –§–æ—Ä–º–∞ –≤–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö
        input_data = {}

        categories = {
            "–ü–æ–ª": ["–ú—É–∂—Å–∫–æ–π", "–ñ–µ–Ω—Å–∫–∏–π"],
            "–°–µ–º–µ–π–Ω—ã–π —Å—Ç–∞—Ç—É—Å": [
                "–°–æ—Å—Ç–æ—é –≤ –±—Ä–∞–∫–µ",
                "–ù–µ —Å–æ—Å—Ç–æ—è–ª(–∞) –≤ –±—Ä–∞–∫–µ",
                "–†–∞–∑–≤–µ–¥–µ–Ω(–∞)",
                "–í–¥–æ–≤–µ—Ü/–í–¥–æ–≤–∞",
                "–ì—Ä–∞–∂–¥–∞–Ω—Å–∫–∏–π –±—Ä–∞–∫",
            ],
            "–†–∞–±–æ—á–∏–π —Å—Ç–∞—Ç—É—Å": ["–î–∞", "–ù–µ—Ç"],
            "–°—Ç–∞—Ç—É—Å –ø–µ–Ω—Å–∏–æ–Ω–µ—Ä–∞": ["–î–∞", "–ù–µ—Ç"],
            "–ö–≤–∞—Ä—Ç–∏—Ä–∞ –≤ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏": ["–î–∞", "–ù–µ—Ç"],
        }

        # –°–ª–æ–≤–∞—Ä—å –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        categorical_mapping = {
            "–ü–æ–ª": {"–ú—É–∂—Å–∫–æ–π": 1, "–ñ–µ–Ω—Å–∫–∏–π": 0},
            "–†–∞–±–æ—á–∏–π —Å—Ç–∞—Ç—É—Å": {"–î–∞": 1, "–ù–µ—Ç": 0},
            "–°—Ç–∞—Ç—É—Å –ø–µ–Ω—Å–∏–æ–Ω–µ—Ä–∞": {"–î–∞": 1, "–ù–µ—Ç": 0},
            "–ö–≤–∞—Ä—Ç–∏—Ä–∞ –≤ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏": {"–î–∞": 1, "–ù–µ—Ç": 0},
            "–°–µ–º–µ–π–Ω—ã–π —Å—Ç–∞—Ç—É—Å": {
                "–°–æ—Å—Ç–æ—é –≤ –±—Ä–∞–∫–µ": "–°–æ—Å—Ç–æ—é –≤ –±—Ä–∞–∫–µ",
                "–ù–µ —Å–æ—Å—Ç–æ—è–ª(–∞) –≤ –±—Ä–∞–∫–µ": "–ù–µ —Å–æ—Å—Ç–æ—è–ª(–∞) –≤ –±—Ä–∞–∫–µ",
                "–†–∞–∑–≤–µ–¥–µ–Ω(–∞)": "–†–∞–∑–≤–µ–¥–µ–Ω(–∞)",
                "–í–¥–æ–≤–µ—Ü/–í–¥–æ–≤–∞": "–í–¥–æ–≤–µ—Ü/–í–¥–æ–≤–∞",
                "–ì—Ä–∞–∂–¥–∞–Ω—Å–∫–∏–π –±—Ä–∞–∫": "–ì—Ä–∞–∂–¥–∞–Ω—Å–∫–∏–π –±—Ä–∞–∫",
            },
        }

        for field, options in categories.items():
            input_data[field] = st.selectbox(field, options)

        # –°–ª–æ–≤–∞—Ä—å –¥–ª—è —á–∏—Å–ª–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        fields = {
            "–í–æ–∑—Ä–∞—Å—Ç": (18, 100),
            "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–µ—Ç–µ–π": (0, 10),
            "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–∂–¥–∏–≤–µ–Ω—Ü–µ–≤": (0, 10),
            "–ê–≤—Ç–æ –≤ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏": (0, 5),
            "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞–±–æ—á–∏—Ö –ª–µ—Ç": (0, 50),
            "–õ–∏—á–Ω—ã–π –¥–æ—Ö–æ–¥": (0, 500000),
            "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫—Ä–µ–¥–∏—Ç–æ–≤": (0, 50),
            "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫—Ä—ã—Ç—ã—Ö –∫—Ä–µ–¥–∏—Ç–æ–≤": (0, 50),
        }

        for field, (min_val, max_val) in fields.items():
            input_data[field] = st.number_input(
                field, min_value=min_val, max_value=max_val, value=min_val
            )

        # –ö–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∏–º–∞–µ—Ç –∫–Ω–æ–ø–∫—É
        submit_button = st.form_submit_button(label="–ü—Ä–µ–¥—Å–∫–∞–∑–∞—Ç—å")

        if submit_button:
            # –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∞–ª—å–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π –≤ —á–∏—Å–ª–æ–≤—ã–µ
            transformed_input = {
                "GENDER": categorical_mapping["–ü–æ–ª"][input_data["–ü–æ–ª"]],
                "MARITAL_STATUS": categorical_mapping["–°–µ–º–µ–π–Ω—ã–π —Å—Ç–∞—Ç—É—Å"][
                    input_data["–°–µ–º–µ–π–Ω—ã–π —Å—Ç–∞—Ç—É—Å"]
                ],
                "SOCSTATUS_WORK_FL": categorical_mapping["–†–∞–±–æ—á–∏–π —Å—Ç–∞—Ç—É—Å"][
                    input_data["–†–∞–±–æ—á–∏–π —Å—Ç–∞—Ç—É—Å"]
                ],
                "SOCSTATUS_PENS_FL": categorical_mapping["–°—Ç–∞—Ç—É—Å –ø–µ–Ω—Å–∏–æ–Ω–µ—Ä–∞"][
                    input_data["–°—Ç–∞—Ç—É—Å –ø–µ–Ω—Å–∏–æ–Ω–µ—Ä–∞"]
                ],
                "FL_PRESENCE_FL": categorical_mapping["–ö–≤–∞—Ä—Ç–∏—Ä–∞ –≤ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏"][
                    input_data["–ö–≤–∞—Ä—Ç–∏—Ä–∞ –≤ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏"]
                ],
                "AGE": input_data["–í–æ–∑—Ä–∞—Å—Ç"],
                "CHILD_TOTAL": input_data["–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–µ—Ç–µ–π"],
                "DEPENDANTS": input_data["–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–∂–¥–∏–≤–µ–Ω—Ü–µ–≤"],
                "OWN_AUTO": input_data["–ê–≤—Ç–æ –≤ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏"],
                "WORK_YEARS": input_data["–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞–±–æ—á–∏—Ö –ª–µ—Ç"],
                "PERSONAL_INCOME": input_data["–õ–∏—á–Ω—ã–π –¥–æ—Ö–æ–¥"],
                "TOTAL_LOANS": input_data["–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫—Ä–µ–¥–∏—Ç–æ–≤"],
                "CLOSED_LOANS": input_data["–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫—Ä—ã—Ç—ã—Ö –∫—Ä–µ–¥–∏—Ç–æ–≤"],
            }

            input_df = pd.DataFrame([transformed_input])

            # –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ —Å –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é
            pred, proba = predict_on_input(input_df, model, best_threshold)

            # –£—Å–ª–æ–≤–∏–µ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ü–≤–µ—Ç–∞ —Ñ–æ–Ω–∞
            if pred == 1:
                st.success(
                    f"–ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ: {'–î–∞' if pred == 1 else '–ù–µ—Ç'} (–≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å: {proba:.2f})"
                )
            else:
                st.markdown(
                    f'<div style="background-color: #E9A098; padding: 10px; color: white;">'
                    f'–ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ: {"–î–∞" if pred == 1 else "–ù–µ—Ç"} (—É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {proba:.2f})'
                    f"</div>",
                    unsafe_allow_html=True,
                )
